#! /usr/bin/env python3
# vim: expandtab shiftwidth=4 tabstop=4

"""The data here was _half_ created with the `infer_tokens.py` script, and half laboriously inferred by hand."""

import json

data = {
    (128,): "end",
    (129,): "for",
    (130,): "next",
    (131,): "data",
    (132,): "input#",
    (133,): "input",
    (134,): "dim",
    (135,): "read",
    (136,): "let",
    (137,): "goto",
    (138,): "run",
    (139,): "if",
    (140,): "restore",
    (141,): "gosub",
    (142,): "return",
    (143,): "rem",
    (144,): "stop",
    (145,): "on",
    (146,): "wait",
    (147,): "load",
    (148,): "save",
    (149,): "verify",
    (150,): "def",
    (151,): "poke",
    (152,): "print#",
    (153,): "print",
    (154,): "cont",
    (155,): "list",
    (156,): "clr",
    (157,): "cmd",
    (158,): "sys",
    (159,): "open",
    (160,): "close",
    (161,): "get",
    (162,): "new",
    (163,): "tab(",
    (164,): "to",
    (165,): "fn",
    (166,): "spc(",
    (167,): "then",
    (168,): "not",
    (169,): "step",
    (170,): "+",
    (171,): "-",
    (172,): "*",
    (173,): "/",
    (174,): "^",
    (175,): "and",
    (176,): "or",
    (177,): ">",
    (178,): "=",
    (179,): "<",
    (180,): "sgn",
    (181,): "int",
    (182,): "abs",
    (183,): "usr",
    (184,): "fre",
    (185,): "pos",
    (186,): "sqr",
    (187,): "rnd",
    (188,): "log",
    (189,): "exp",
    (190,): "cos",
    (191,): "sin",
    (192,): "tan",
    (193,): "atn",
    (194,): "peek",
    (195,): "len",
    (196,): "str$",
    (197,): "val",
    (198,): "asc",
    (199,): "chr$",
    (200,): "left$",
    (201,): "right$",
    (202,): "mid$",
    (203,): "go",
    (204,): "ERR",
    (205,): "for",
    (206,): "bsave",
    (206, 128,): "mon",
    (206, 129,): "dos",
    (206, 130,): "old",
    (206, 131,): "geos",
    (206, 132,): "vpoke",
    (206, 133,): "vload",
    (206, 134,): "screen",
    (206, 135,): "pset",
    (206, 136,): "line",
    (206, 137,): "frame",
    (206, 138,): "rect",
    (206, 139,): "char",
    (206, 140,): "mouse",
    (206, 141,): "color",
    (206, 142,): "test",
    (206, 143,): "reset",
    (206, 144,): "cls",
    (206, 145,): "codex",
    (206, 146,): "locate",
    (206, 147,): "boot",
    (206, 148,): "keymap",
    (206, 149,): "bload",
    (206, 150,): "bvload",
    (206, 151,): "bverify",
    (206, 152,): "bank",
    (206, 153,): "fminit",
    (206, 154,): "fmnote",
    (206, 155,): "fmdrum",
    (206, 156,): "fminst",
    (206, 157,): "fmvib",
    (206, 158,): "fmfreq",
    (206, 159,): "fmvol",
    (206, 160,): "fmpan",
    (206, 161,): "fmplay",
    (206, 162,): "fmchord",
    (206, 163,): "fmpoke",
    (206, 164,): "psginit",
    (206, 165,): "psgnote",
    (206, 166,): "psgvol",
    (206, 167,): "psgwav",
    (206, 168,): "psgfreq",
    (206, 169,): "psgpan",
    (206, 170,): "psgplay",
    (206, 171,): "psgchord",
    (206, 172,): "reboot",
    (206, 173,): "poweroff",
    (206, 174,): "i2cpoke",
    (206, 175,): "sleep",
    (206, 176,): "bsave",
    (206, 177,): "menu",
    (206, 178,): "ren",
    (206, 179,): "linput#",
    (206, 180,): "linput",
    (206, 181,): "binput#",
    (206, 182,): "help",
    (206, 183,): "banner",
    (206, 184,): "exec",
    (206, 185,): "tile",
    (206, 186,): "edit",
    (206, 187,): "sprite",
    (206, 188,): "sprmem",
    (206, 189,): "movspr",
    (206, 190,): "basload",
    (206, 191,): "oval",
    (206, 192,): "ring",
    (206, 193,): "vpeek",
    (206, 194,): "mx",
    (206, 195,): "my",
    (206, 196,): "mb",
    (206, 197,): "joy",
    (206, 198,): "hex$",
    (206, 199,): "bin$",
    (206, 200,): "i2cpeek",
    (206, 201,): "pointer",
    (206, 202,): "strptr",
    (206, 203,): "rpt$",
    (206, 204,): "mwheel",
    (206, 205,): "tdata",
    (206, 206,): "tattr",
    (206, 207,): "oke",
    (206, 208,): "vpeek",
    (206, 209,): "mx",
    (206, 210,): "my",
    (206, 211,): "mb",
    (206, 212,): "joy",
    (206, 213,): "hex$",
    (206, 214,): "bin$",
    (206, 215,): "i2cpeek",
    (206, 216,): "pointer",
    (206, 217,): "strptr",
    (206, 218,): "rpt$",
    (206, 219,): "mwheel",
    (206, 220,): "tdata",
    (206, 221,): "tattr",
    (206, 222,): "oke",
    (206, 223,): "file open",
    (206, 224,): "file not open",
    (206, 225,): "file not found",
    (206, 226,): "device not present",
    (206, 227,): "not input fireboot",
    (206, 228,): "poweroff",
    (206, 229,): "i2cpoke",
    (206, 230,): "sleep",
    (206, 231,): "bsave",
    (206, 232,): "menu",
    (206, 233,): "ren",
    (206, 234,): "linput#",
    (206, 235,): "linput",
    (206, 236,): "binput#",
    (206, 237,): "help",
    (206, 238,): "banner",
    (206, 239,): "exec",
    (206, 240,): "tile",
    (206, 241,): "edit",
    (206, 242,): "sprite",
    (206, 243,): "sprmem",
    (206, 244,): "movspr",
    (206, 245,): "basload",
    (206, 246,): "oval",
    (206, 247,): "ring",
    (206, 248,): "vpeek",
    (206, 249,): "mx",
    (206, 250,): "my",
    (206, 251,): "mb",
    (206, 252,): "joy",
    (206, 253,): "hex$",
    (206, 254,): "bin$",
    (206, 255,): "i2cpeek",

    (207,): "data",
    (208,): "input#",
    (209,): "input",
    (210,): "dim",
    (211,): "read",
    (212,): "let",
    (213,): "goto",
    (214,): "run",
    (215,): "if",
    (216,): "restore",
    (217,): "gosub",
    (218,): "return",
    (219,): "rem",
    (220,): "stop",
    (221,): "on",
    (222,): "wait",
    (223,): "load",
    (224,): "save",
    (225,): "verify",
    (226,): "def",
    (227,): "poke",
    (228,): "print#",
    (229,): "print",
    (230,): "cont",
    (231,): "list",
    (232,): "clr",
    (233,): "cmd",
    (234,): "sys",
    (235,): "open",
    (236,): "close",
    (237,): "get",
    (238,): "new",
    (239,): "tab(",
    (240,): "to",
    (241,): "fn",
    (242,): "spc(",
    (243,): "then",
    (244,): "not",
    (245,): "step",
    (246,): "+",
    (247,): "-",
    (248,): "*",
    (249,): "/",
    (250,): "^",
    (251,): "and",
    (252,): "or",
    (253,): ">",
    (254,): "=",
    (255,): "~"
}

def main():
    rev = {}
    for key, value in data.items():
        if len(key,) == 1:
            key = key[0]
        elif len(key,) == 2:
            key = key[0] * 256 + key[1]
        else:
            raise RuntimeError(key)
        rev[key] = value
    with open("token2basic.json", "wt", encoding="utf-8") as jsfp:
        json.dump(rev, jsfp, indent=4, sort_keys=True, ensure_ascii=False)

if __name__ == "__main__":
    main()
